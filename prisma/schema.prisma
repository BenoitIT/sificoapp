// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  firstName           String
  lastName            String
  email               String                @unique
  phone               String                @unique
  role                String
  gender              String
  password            String
  deliverySite        deliverySite[]
  stuffingReportItems stuffingreportItems[]
  createdAt           DateTime              @default(now())

  Invoice     Invoice[]
  Commissions Commissions[]
}

model deliverySite {
  id                  Int                   @id @default(autoincrement())
  country             String
  locationName        String
  user                User                  @relation(fields: [agent], references: [id])
  agent               Int
  createdAt           DateTime              @default(now())
  consignee           consignee[]
  siteCode            String
  shippingInstruction shippingInstruction[]

  stuffingreport stuffingreport[]
}

model deliveries {
  id             Int              @id @default(autoincrement())
  country        String
  deliveryName   String
  createdAt      DateTime         @default(now())
  stuffingreport stuffingreport[]
}

model shipper {
  id             Int              @id @default(autoincrement())
  name           String           @default("SIFCO Company Ltd")
  location       String           @default("Kigali-Rwanda")
  email          String           @default("info@superfreightservice.com")
  phone          String           @default("+250788713189")
  stuffingreport stuffingreport[]
  createdAt      DateTime         @default(now())
}

model consignee {
  id                  Int                   @id @default(autoincrement())
  name                String
  location            deliverySite          @relation(fields: [locationid], references: [id])
  locationid          Int
  email               String
  phone               String                @unique
  tinnumber           String
  stuffingreportItems stuffingreportItems[]
  createdAt           DateTime              @default(now())
}

model shippingInstruction {
  id                  Int                 @id @default(autoincrement())
  prepared            Boolean             @default(false)
  portOfdischarge     String
  deliveryTerm        String
  prepaidFreight      Int                 @default(0)
  prepaidBlFee        Int                 @default(0)
  finaldeliverId      Int
  finaldelivery       deliverySite        @relation(fields: [finaldeliverId], references: [id])
  totalamountinword   String
  itemId              Int                 @unique
  stuffingReportItems stuffingreportItems @relation(fields: [itemId], references: [id])
  createdAt           DateTime            @default(now())
  updatedAt           String              @default("")
}

model stuffingreport {
  id                  Int                   @id @default(autoincrement())
  code                String
  status              String
  stuffingstatus      String                @default("preview")
  origin              String
  shipperId           Int
  delivery            deliveries            @relation(fields: [deliveryId], references: [id])
  deliveryId          Int
  shipper             shipper               @relation(fields: [shipperId], references: [id])
  stuffingreportItems stuffingreportItems[]
  createdAt           DateTime              @default(now())
  packagingType       String
  blCode              String
  deliverySite        deliverySite?         @relation(fields: [deliverySiteId], references: [id])
  deliverySiteId      Int?
}

model stuffingreportItems {
  id               Int            @id @default(autoincrement())
  container        stuffingreport @relation(fields: [stuffingreportid], references: [id])
  stuffingreportid Int
  consignee        consignee      @relation(fields: [consigneeId], references: [id])
  consigneeId      Int
  code             String
  mark             String
  salesAgentId     Int
  salesAgent       User           @relation(fields: [salesAgentId], references: [id])
  noOfPkgs         Int
  typeOfPkg        String
  weight           Int
  line             Int
  handling         Int
  type             String
  cbm              Int
  description      String
  freight          Int
  blFee            Int
  jb               Int
  inspection       Int
  carHanging       Int
  recovery         Int
  insurance        Int
  localCharges     Int
  invoiceNo        String         @unique
  totalUsd         Int
  totalAed         Int
  invoice          Invoice[]
  createdAt        DateTime       @default(now())

  shippingInstruction shippingInstruction[]
}

model Invoice {
  id                 Int                 @id @default(autoincrement())
  vat                Int                 @default(0)
  totalAmountInWords String
  details            stuffingreportItems @relation(fields: [detailsId], references: [invoiceNo])
  createdBy          User                @relation(fields: [staffid], references: [id])
  staffid            Int
  detailsId          String              @unique
  paidInFull         Boolean             @default(false)
  amountPaid         Int                 @default(0)
  paidAt             String              @default("")
  recievedBy         String              @default("")
  paymentApproved    Boolean             @default(false)
  releaseGenarated   Boolean             @default(false)
  createdAt          DateTime            @default(now())
}

model Commissions {
  id             Int      @id @default(autoincrement())
  agent          User     @relation(fields: [agentId], references: [id])
  agentId        Int
  handling       Float
  rate           Int
  totalAmount    Float
  stuffingItemId Int
  amountPaid     Int      @default(0)
  paymentStatus  String   @default("unpaid")
  paidAt         String   @default("")
  paidBy         String   @default("")
  createdAt      DateTime @default(now())
}

model CalculationDependancy {
  id                  Int   @id @default(autoincrement())
  usd                 Int   @default(1)
  aed                 Float @default(3.66)
  freightRate         Float @default(260)
  freightRateFullCont Float @default(270)
}
